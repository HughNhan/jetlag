---
# create-ai-cluster tasks

- name: Create cluster
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters"
    method: POST
    body_format: json
    status_code: [201]
    return_content: true
    body: {
        "name": "{{ cluster_name }}",
        "openshift_version": "{{ openshift_version }}",
        "base_dns_domain": "{{ base_dns_name }}",
        "cluster_network_cidr": "{{ cluster_network_cidr }}",
        "cluster_network_host_prefix": 23,
        "service_network_cidr": "{{ service_network_cidr }}",
        "ingress_vip": "{{ controlplane_network_ingress }}",
        "pull_secret": "{{ pull_secret | to_json }}",
        "ssh_public_key": "{{ lookup('file', ssh_public_key_file) }}",
        "vip_dhcp_allocation": "{{ vip_dhcp_allocation }}",
        "additional_ntp_source": "{{ ntp_server }}"
    }
  register: create_cluster_return

- name: Set cluster ID
  set_fact:
    ai_cluster_id: "{{ create_cluster_return.json.id }}"

- name: Add entries in /etc/hosts
  blockinfile:
    path: "/etc/hosts"
    backup: true
    block: |
        {{ controlplane_network_api }} api.{{ cluster_name }}.{{ base_dns_name }}
        {{ controlplane_network_ingress }} oauth-openshift.apps.{{ cluster_name }}.{{ base_dns_name }}
        {{ controlplane_network_ingress }} console-openshift-console.apps.{{ cluster_name }}.{{ base_dns_name }}
        {{ controlplane_network_ingress }} downloads-openshift-console.apps.{{ cluster_name }}.{{ base_dns_name }}
        {{ controlplane_network_ingress }} alertmanager-main-openshift-monitoring.apps.{{ cluster_name }}.{{ base_dns_name }}
        {{ controlplane_network_ingress }} grafana-openshift-monitoring.apps.{{ cluster_name }}.{{ base_dns_name }}
        {{ controlplane_network_ingress }} prometheus-k8s-openshift-monitoring.apps.{{ cluster_name }}.{{ base_dns_name }}
        {{ controlplane_network_ingress }} thanos-querier-openshift-monitoring.apps.{{ cluster_name }}.{{ base_dns_name }}
    insertafter: "EOF"
    marker: "# {mark} {{ cluster_name }} OCP CLUSTER MANAGED BLOCK"

- name: Add manifest to disable lab interface on control-plane nodes
  uri:
    url: "http://{{ assisted_installer_host }}:{{ assisted_installer_port }}/api/assisted-install/v1/clusters/{{ ai_cluster_id }}/manifests"
    method: POST
    body_format: json
    status_code: [201]
    body: {
        "folder": "manifests",
        "file_name": "50-controlplane-disable-lab-dhcp-interface.yaml",
        "content": "{{ lookup('template', './50-controlplane-disable-lab-dhcp-interface.yml.j2') | b64encode }}"
    }
